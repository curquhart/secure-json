stages:
  - test

testJava7:
  tags:
    - docker
  image: gradle:4.10-jdk7
  stage: test
  script:
    - unset SONAR_TOKEN
    - gradle --no-daemon check

testJava8:
  tags:
    - docker
  image: gradle:4.10-jdk8
  stage: test
  script:
    - unset SONAR_TOKEN
    - gradle --no-daemon check

testJava10:
  tags:
    - docker
  image: gradle:4.10-jdk10
  stage: test
  script:
    - unset SONAR_TOKEN
    - gradle --no-daemon check

javadocs:
  # we aren't doing anything with these here, but we use them in the Maven releases, so we want the pipeline to run them
  # to verify no errors on a regular basis.
  tags:
  - docker
  image: gradle:4.10-jdk10
  stage: test
  script:
    - unset SONAR_TOKEN
    - gradle --no-daemon javadoc

# Lets support this in the pipeline, but call it experimental to be clear that we're using an experimental Gradle version.
testJava11:
  tags:
    - docker
  image: gradle:4.10-jdk11
  stage: test
  script:
    - unset SONAR_TOKEN
    - gradle wrapper --gradle-version=5.0-20181110000025+0000
    - ./gradlew --no-daemon check

verifyJSONTestSuite:
  tags:
    - docker
  image: gradle:4.10-jdk10
  stage: test
  script:
    - unset SONAR_TOKEN
    - gradle --no-daemon verifyJSONTestSuite

sonarqube:
  tags:
    - docker
  image: gradle:4.10-jdk10
  stage: test
  only:
    - master
  script: gradle --no-daemon sonarqube -Dsonar.projectKey=$SONAR_PROJECT_KEY -Dsonar.organization=$SONAR_ORGANIZATION -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN