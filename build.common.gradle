apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'checkstyle'

sourceCompatibility = 1.7

repositories {
    jcenter()
}

sourceSets {
    shared {
        java {
            srcDirs 'src/shared/java'
        }
    }

    cli {
        java {
            srcDirs 'src/cli/java'
        }
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
        compileClasspath += sourceSets.shared.output
        runtimeClasspath += sourceSets.shared.output
    }

    test {
        java {
            compileClasspath += sourceSets.shared.output
            runtimeClasspath += sourceSets.shared.output
        }
    }
}

dependencies {
    compile 'io.github.novacrypto:SecureString:2018.10.06@jar'
    cliCompile 'io.github.novacrypto:SecureString:2018.10.06@jar'
    testCompile 'org.testng:testng:6.14.3'
    testRuntime 'org.testng:testng:6.14.3'
}

jacoco {
    toolVersion = "0.8.1"
}

checkstyle {
    configFile file("config/checkstyle.xml")
}

compileJava {
    options.compilerArgs << '-Xlint:unchecked'
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.75
            }
        }
    }
}

test {
    useTestNG()
}

// don't verify until the report has been generated so that we can have a visual representation.
jacocoTestCoverageVerification.mustRunAfter jacocoTestReport

check.dependsOn jacocoTestReport
check.dependsOn jacocoTestCoverageVerification

clean {
    delete buildDir
}

task cloneJSONTestSuite(type: Exec) {
    ext {
        cloneDir = "${buildDir}/JSONTestSuite"
    }

    commandLine 'git', 'clone', 'https://github.com/nst/JSONTestSuite', ext.cloneDir
    outputs.files(cloneDir)
}
cloneJSONTestSuite.mustRunAfter clean

task verifyJSONTestSuite(dependsOn: [cloneJSONTestSuite, compileCliJava]) {
    def jsonFiles = fileTree("${cloneJSONTestSuite.ext.cloneDir}/test_parsing/")
    inputs.files jsonFiles
    doLast {
        javaexec {
            systemProperties['verifyRunMode'] = 'batch'
            classpath sourceSets.cli.runtimeClasspath
            main = 'com.chelseaurquhart.securejson.Verify'
            args = jsonFiles
        }
    }
}
